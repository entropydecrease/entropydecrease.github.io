{"version":3,"sources":["file:///Users/xiaojf/personal/OneDrive/private/blog/entropydecrease/themes/hugo-narrow/assets/js/main.js"],"sourcesContent":["// UI管理器 - 管理主题、下拉菜单等界面交互\nclass UIManager {\n  constructor() {\n    this.theme = localStorage.getItem(\"theme\") || \"system\";\n    this.colorScheme =\n      localStorage.getItem(\"colorScheme\") ||\n      document.documentElement.getAttribute(\"data-theme\") ||\n      \"default\";\n    this.init();\n  }\n\n  init() {\n    this.setupEventListeners();\n    this.updateUI();\n  }\n\n  // 通用下拉菜单处理函数 - 统一处理所有类型的菜单\n  setupDropdown(type) {\n    const toggleSelector = `.dropdown-toggle[data-dropdown-type=\"${type}\"]`;\n    const dropdownSelector = `.dropdown-menu[data-dropdown-type=\"${type}\"]`;\n\n    const toggles = document.querySelectorAll(toggleSelector);\n    const dropdowns = document.querySelectorAll(dropdownSelector);\n\n    toggles.forEach((toggle, index) =\u003e {\n      const dropdown = dropdowns[index] || dropdowns[0];\n      if (toggle \u0026\u0026 dropdown) {\n        toggle.addEventListener(\"click\", (e) =\u003e {\n          e.stopPropagation();\n\n          // 关闭其他所有类型的菜单\n          this.closeOtherMenus(type);\n\n          // 关闭同类型的其他下拉菜单\n          document.querySelectorAll(dropdownSelector).forEach(d =\u003e {\n            if (d !== dropdown) {\n              d.classList.add(\"hidden\");\n              // 更新对应按钮的 aria-expanded\n              const correspondingToggle = document.querySelector(`${toggleSelector}[aria-labelledby=\"${d.getAttribute('aria-labelledby')}\"], ${toggleSelector}[aria-controls=\"${d.id}\"]`);\n              if (correspondingToggle) {\n                correspondingToggle.setAttribute(\"aria-expanded\", \"false\");\n              }\n            }\n          });\n\n          // 切换当前下拉菜单\n          const isHidden = dropdown.classList.contains(\"hidden\");\n          dropdown.classList.toggle(\"hidden\");\n\n          // 更新当前按钮的 aria-expanded 属性\n          toggle.setAttribute(\"aria-expanded\", isHidden ? \"true\" : \"false\");\n\n          // 如果是移动端菜单，添加特殊处理\n          if (type === \"mobile-menu\") {\n            this.handleMobileMenuClick(dropdown, toggle);\n          }\n        });\n      }\n    });\n  }\n\n  // 关闭其他类型的菜单 - 统一处理所有菜单类型\n  closeOtherMenus(currentType) {\n    const allTypes = ['color-scheme', 'theme', 'language', 'mobile-menu'];\n    allTypes.forEach(type =\u003e {\n      if (type !== currentType) {\n        document.querySelectorAll(`.dropdown-menu[data-dropdown-type=\"${type}\"]`)\n          .forEach(d =\u003e {\n            d.classList.add(\"hidden\");\n            // 更新对应按钮的 aria-expanded\n            const toggle = document.querySelector(`.dropdown-toggle[data-dropdown-type=\"${type}\"]`);\n            if (toggle) {\n              toggle.setAttribute(\"aria-expanded\", \"false\");\n            }\n          });\n      }\n    });\n  }\n\n  // 关闭所有下拉菜单\n  closeAllDropdowns() {\n    document.querySelectorAll(\".dropdown-menu\")\n      .forEach(d =\u003e {\n        d.classList.add(\"hidden\");\n        // 更新对应按钮的 aria-expanded\n        const dropdownType = d.getAttribute(\"data-dropdown-type\");\n        if (dropdownType) {\n          const toggle = document.querySelector(`.dropdown-toggle[data-dropdown-type=\"${dropdownType}\"]`);\n          if (toggle) {\n            toggle.setAttribute(\"aria-expanded\", \"false\");\n          }\n        }\n      });\n  }\n\n  // 关闭移动端菜单 - 保持向后兼容\n  closeMobileMenu() {\n    const mobileMenu = document.getElementById(\"mobile-menu\");\n    const mobileMenuToggle = document.getElementById(\"mobile-menu-toggle\");\n\n    if (mobileMenu) {\n      mobileMenu.classList.add(\"hidden\");\n    }\n\n    if (mobileMenuToggle) {\n      mobileMenuToggle.setAttribute(\"aria-expanded\", \"false\");\n    }\n  }\n\n  // 关闭所有菜单（包括下拉菜单和移动端菜单）\n  closeAllMenus() {\n    this.closeAllDropdowns();\n  }\n\n  // 移动端菜单特殊处理 - 点击菜单项后自动关闭\n  handleMobileMenuClick(dropdown, toggle) {\n    // 点击菜单项后关闭菜单\n    dropdown.addEventListener(\"click\", (e) =\u003e {\n      const link = e.target.closest('a[href]');\n      if (link) {\n        // 延迟关闭，让导航有时间完成\n        setTimeout(() =\u003e {\n          dropdown.classList.add(\"hidden\");\n          toggle.setAttribute(\"aria-expanded\", \"false\");\n        }, 100);\n      }\n    });\n  }\n\n  // 设置移动端菜单 - 保持向后兼容，但现在使用统一的 setupDropdown\n  setupMobileMenu() {\n    // 这个方法现在主要用于向后兼容\n    // 实际的事件处理由 setupDropdown(\"mobile-menu\") 完成\n    console.log(\"移动端菜单使用统一的下拉菜单处理逻辑\");\n  }\n\n  setupEventListeners() {\n    // 设置所有下拉菜单，包括移动端菜单\n    this.setupDropdown(\"mobile-menu\");\n    this.setupDropdown(\"color-scheme\");\n    this.setupDropdown(\"theme\");\n    this.setupDropdown(\"language\");\n\n    // 主题风格选择事件\n    const colorSchemeDropdowns = document.querySelectorAll(\n      '.dropdown-menu[data-dropdown-type=\"color-scheme\"]',\n    );\n    colorSchemeDropdowns.forEach((dropdown) =\u003e {\n      if (dropdown) {\n        dropdown.addEventListener(\"click\", (e) =\u003e {\n          const button = e.target.closest(\"[data-color-scheme]\");\n          if (button) {\n            const newColorScheme = button.getAttribute(\"data-color-scheme\");\n            this.setColorScheme(newColorScheme);\n            this.closeAllMenus();\n          }\n        });\n      }\n    });\n\n    // 明暗模式选择事件\n    const themeDropdowns = document.querySelectorAll(\n      '.dropdown-menu[data-dropdown-type=\"theme\"]',\n    );\n    themeDropdowns.forEach((dropdown) =\u003e {\n      if (dropdown) {\n        dropdown.addEventListener(\"click\", (e) =\u003e {\n          const button = e.target.closest(\"[data-theme]\");\n          if (button) {\n            const newTheme = button.getAttribute(\"data-theme\");\n            this.setTheme(newTheme);\n            this.closeAllMenus();\n          }\n        });\n      }\n    });\n\n    // 点击外部关闭所有菜单 - 统一处理\n    document.addEventListener(\"click\", (e) =\u003e {\n      // 检查是否点击在任何菜单相关元素内\n      const isClickInsideMenu = e.target.closest('.dropdown-toggle, .dropdown-menu');\n\n      // 如果点击在外部，关闭所有菜单\n      if (!isClickInsideMenu) {\n        this.closeAllMenus();\n      }\n    });\n\n    // 键盘导航支持 - ESC键关闭所有菜单\n    document.addEventListener(\"keydown\", (e) =\u003e {\n      if (e.key === \"Escape\") {\n        this.closeAllMenus();\n      }\n    });\n\n    // 监听系统主题变化\n    window\n      .matchMedia(\"(prefers-color-scheme: dark)\")\n      .addEventListener(\"change\", () =\u003e {\n        if (this.theme === \"system\") {\n          this.applyTheme();\n          this.updateUI();\n        }\n      });\n  }\n\n  setColorScheme(colorScheme) {\n    this.colorScheme = colorScheme;\n    localStorage.setItem(\"colorScheme\", colorScheme);\n    document.documentElement.setAttribute(\"data-theme\", colorScheme);\n    this.updateUI();\n\n    // 触发自定义事件，通知主题已更改\n    window.dispatchEvent(\n      new CustomEvent(\"themeChanged\", {\n        detail: { colorScheme: colorScheme, theme: this.theme },\n      }),\n    );\n  }\n\n  setTheme(theme) {\n    this.theme = theme;\n    localStorage.setItem(\"theme\", theme);\n    this.applyTheme();\n    this.updateUI();\n\n    // 触发自定义事件，通知主题已更改\n    window.dispatchEvent(\n      new CustomEvent(\"themeChanged\", {\n        detail: { colorScheme: this.colorScheme, theme: theme },\n      }),\n    );\n  }\n\n  applyTheme() {\n    if (\n      this.theme === \"dark\" ||\n      (this.theme === \"system\" \u0026\u0026\n        window.matchMedia(\"(prefers-color-scheme: dark)\").matches)\n    ) {\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n    }\n  }\n\n  updateUI() {\n    // 更新主题图标显示 - 支持类选择器和 ID 选择器\n    const sunIcons = document.querySelectorAll(\".sun-icon, #sun-icon\");\n    const moonIcons = document.querySelectorAll(\".moon-icon, #moon-icon\");\n    const systemIcons = document.querySelectorAll(\".system-icon, #system-icon\");\n\n    // 隐藏所有图标\n    [...sunIcons, ...moonIcons, ...systemIcons].forEach((icon) =\u003e {\n      if (icon) icon.classList.add(\"hidden\");\n    });\n\n    // 显示当前主题对应的图标\n    if (this.theme === \"light\") {\n      sunIcons.forEach((icon) =\u003e icon.classList.remove(\"hidden\"));\n    } else if (this.theme === \"dark\") {\n      moonIcons.forEach((icon) =\u003e icon.classList.remove(\"hidden\"));\n    } else if (this.theme === \"system\") {\n      systemIcons.forEach((icon) =\u003e icon.classList.remove(\"hidden\"));\n    }\n\n    // 更新下拉菜单中的选中状态\n    this.updateDropdownSelection();\n  }\n\n  updateDropdownSelection() {\n    // 更新主题风格选择状态\n    document.querySelectorAll(\"[data-color-scheme]\").forEach((button) =\u003e {\n      const isSelected =\n        button.getAttribute(\"data-color-scheme\") === this.colorScheme;\n      button.classList.toggle(\"bg-accent\", isSelected);\n      button.classList.toggle(\"text-accent-foreground\", isSelected);\n    });\n\n    // 更新明暗模式选择状态\n    document.querySelectorAll(\"[data-theme]\").forEach((button) =\u003e {\n      const isSelected = button.getAttribute(\"data-theme\") === this.theme;\n      button.classList.toggle(\"bg-accent\", isSelected);\n      button.classList.toggle(\"text-accent-foreground\", isSelected);\n    });\n\n    // 更新语言切换选择状态\n    const currentLang = document.documentElement.lang || 'en';\n    document.querySelectorAll('.dropdown-menu[data-dropdown-type=\"language\"] a[role=\"menuitem\"]').forEach((link) =\u003e {\n      // 从链接的href中提取语言代码\n      const href = link.getAttribute('href');\n      const isSelected = this.isCurrentLanguageLink(href, currentLang);\n      link.classList.toggle(\"bg-accent\", isSelected);\n      link.classList.toggle(\"text-accent-foreground\", isSelected);\n    });\n  }\n\n  // 辅助方法：判断链接是否为当前语言\n  isCurrentLanguageLink(href, currentLang) {\n    // 处理根路径的情况\n    if (href === '/' \u0026\u0026 currentLang === 'en') {\n      return true;\n    }\n\n    // 处理语言前缀路径的情况 (如 /zh/, /en/)\n    const langPattern = new RegExp(`^/${currentLang}(/|$)`);\n    return langPattern.test(href);\n  }\n}\n\n// 页面加载完成后初始化UI管理器\ndocument.addEventListener(\"DOMContentLoaded\", () =\u003e {\n  new UIManager();\n});\n\nconsole.log(\"Hugo site with advanced UI management loaded.\");\n"],"mappings":"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","names":[]}